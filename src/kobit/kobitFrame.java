/*
 * kobitFrame.java
 *
 * Created on December 8, 2022, 5:50 AM
 */
package kobit;

import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author  HP
 */
public class kobitFrame extends javax.swing.JFrame {

    private Random random;
    java.sql.Statement statement;

    /** Creates new form kobitFrame */
    public kobitFrame() {
        initComponents();
        this.setResizable(false);

        String urls = "jdbc:mysql://localhost:3306/kobitcoin";
        String username = "root";
        String password = "";

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection(urls, username, password);
            statement = connection.createStatement();
        /**
        ResultSet rs = statement.executeQuery("SELECT * FROM users" +
        "");
        while(rs.next()){
        System.out.println(rs.getString(2));
        }
         * */
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spin = new javax.swing.JButton();
        txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        c = new javax.swing.JButton();
        ent2 = new javax.swing.JCheckBox();
        ent1 = new javax.swing.JCheckBox();
        ent5 = new javax.swing.JCheckBox();
        txt2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spin.setText("Spin");
        spin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spinActionPerformed(evt);
            }
        });

        txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActionPerformed(evt);
            }
        });

        jLabel1.setText("Kobit Card Generation");

        c.setText("c");
        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        ent2.setText("200");
        ent2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ent2ActionPerformed(evt);
            }
        });

        ent1.setText("100");

        ent5.setText("500");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(spin)
                .addGap(26, 26, 26)
                .addComponent(c)
                .addGap(91, 91, 91))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(txt))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ent2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ent1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ent5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ent2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ent1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ent5)
                            .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spin)
                    .addComponent(c))
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void spinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spinActionPerformed
        
        try {
            if (ent1.isSelected() && ent2.isSelected()){
                JOptionPane.showMessageDialog(null, "Wron option");
            }
            
            else if (ent1.isSelected() && ent5.isSelected()){
                JOptionPane.showMessageDialog(null, "Wron option");
            }
            
            else if (ent2.isSelected() && ent5.isSelected()){
                JOptionPane.showMessageDialog(null, "Wron option");
            }
            
            
            else if (ent1.isSelected()) {
            JOptionPane.showConfirmDialog(null, "Successful");
        
            // TODO add your handling code here:
            random = new Random();

            txt.setText("" + random.nextInt(111111));

            Date d = new Date();
            d.toString();

            String stm = "INSERT INTO coin(code, date) values(" + txt.getText() +100+"," + 5 + ")";

            int rs = statement.executeUpdate(stm);
            }
            
            else if(ent2.isSelected()){
                JOptionPane.showConfirmDialog(null, "Successful");
        
            // TODO add your handling code here:
            random = new Random();

            txt.setText("" + random.nextInt(111111));

            Date d = new Date();
            d.toString();

            String stm = "INSERT INTO coin(code, date) values(" + txt.getText() +200+"," + 5 + ")";

            int rs = statement.executeUpdate(stm);
            }
            
       else if(ent5.isSelected()){
                JOptionPane.showConfirmDialog(null, "Successful");
        
            // TODO add your handling code here:
            random = new Random();

            txt.setText("" + random.nextInt(111111));

            Date d = new Date();
            d.toString();

            String stm = "INSERT INTO coin(code, date) values(" + txt.getText() +500+"," + 5 + ")";

            int rs = statement.executeUpdate(stm);
            }



        } catch (SQLException ex) {//GEN-LAST:event_spinActionPerformed
            Logger.getLogger(kobitFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActionPerformed
    // TODO add your handling code here:
        
}//GEN-LAST:event_txtActionPerformed

    private void cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActionPerformed
    // TODO add your handling code here:
        txt2.getText();
        try{
        ResultSet rs = statement.executeQuery("SELECT * FROM coin where code =" +
        txt2.getText());
        
        if(rs.next() == true){
            JOptionPane.showMessageDialog(null, "Record found");
        }
        else{
            JOptionPane.showConfirmDialog(null, "No records");
        }
        while(rs.next()){
        System.out.println(rs.getString(2));
        }
         
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_cActionPerformed

    private void ent2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ent2ActionPerformed
 
    }//GEN-LAST:event_ent2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new kobitFrame().setVisible(true);





            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton c;
    private javax.swing.JCheckBox ent1;
    private javax.swing.JCheckBox ent2;
    private javax.swing.JCheckBox ent5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton spin;
    private javax.swing.JTextField txt;
    private javax.swing.JTextField txt2;
    // End of variables declaration//GEN-END:variables
}
